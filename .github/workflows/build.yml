name: Docker builds

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
    tags:
      - v*

env:
  DOCKER_USERNAME: kkoval
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: photoview
            description: Photo gallery for self-hosted personal servers
            platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
            context: .
          - name: ffmpeg
            description: External FFmpeg HW-accelerated media processor
            platforms: linux/amd64,linux/arm64
            context: ./ffmpeg-image

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch branches
        run: git fetch --all

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: github.repository == 'kkovaletp/photoview'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DOCKER }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platforms }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        if: success() && github.event_name != 'pull_request' && github.repository == 'kkovaletp/photoview'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Docker meta for ${{ matrix.name }}
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.DOCKER_USERNAME }}/${{ matrix.name }}
          labels: |
            org.opencontainers.image.title=${{ matrix.name }}
            org.opencontainers.image.description=${{ matrix.description }}
          annotations: |
            org.opencontainers.image.title=${{ matrix.name }}
            org.opencontainers.image.description=${{ matrix.description }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set Build Args
        id: vars
        run: |
          echo "BUILD_DATE=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT
          echo "VERSION=kkoval-2-$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Build and push ${{ env.DOCKER_USERNAME }}/${{ matrix.name }}
        id: docker_buildx
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          sbom: true
          provenance: mode=max
          platforms: ${{ matrix.platforms }}
          pull: true
          push: ${{ github.event_name != 'pull_request' && github.repository == 'kkovaletp/photoview' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
            REACT_APP_BUILD_DATE=${{ steps.vars.outputs.BUILD_DATE }}
            VERSION=${{ steps.vars.outputs.VERSION }}
            REACT_APP_BUILD_VERSION=${{ steps.vars.outputs.VERSION }}
            COMMIT_SHA=${{ github.sha }}
            REACT_APP_BUILD_COMMIT_SHA=${{ github.sha }}

  dockle:
    name: Dockle Containers Analysis
    runs-on: ubuntu-latest
    needs: build
    if: github.repository == 'kkovaletp/photoview' && github.event_name != 'pull_request'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: photoview
          - name: ffmpeg

    steps:
       # Makes sure your .dockleignore file is available to the next step
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Run Dockle for ${{ env.DOCKER_USERNAME }}/${{ matrix.name }}:master
        uses: erzz/dockle-action@v1
        with:
          image: ${{ env.DOCKER_USERNAME }}/${{ matrix.name }}:master
          report-name: ${{ matrix.name }}-dockle-results
          report-format: sarif
          failure-threshold: fatal
          exit-code: 1
          timeout: 5m

      - name: Upload SARIF file
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ matrix.name }}-dockle-results.sarif
